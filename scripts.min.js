/*!
 * contentloaded.js
 *
 * Author: Diego Perini (diego.perini at gmail.com)
 * Summary: cross-browser wrapper for DOMContentLoaded
 * Updated: 20101020
 * License: MIT
 * Version: 1.2
 *
 * URL:
 * http://javascript.nwbox.com/ContentLoaded/
 * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
 *
 */

// @win window reference
// @fn function reference
function contentLoaded(win, fn) {

	var done = false, top = true,

	doc = win.document, root = doc.documentElement,

	add = doc.addEventListener ? 'addEventListener' : 'attachEvent',
	rem = doc.addEventListener ? 'removeEventListener' : 'detachEvent',
	pre = doc.addEventListener ? '' : 'on',

	init = function(e) {
		if (e.type == 'readystatechange' && doc.readyState != 'complete') return;
		(e.type == 'load' ? win : doc)[rem](pre + e.type, init, false);
		if (!done && (done = true)) fn.call(win, e.type || e);
	},

	poll = function() {
		try { root.doScroll('left'); } catch(e) { setTimeout(poll, 50); return; }
		init('poll');
	};

	if (doc.readyState == 'complete') fn.call(win, 'lazy');
	else {
		if (doc.createEventObject && root.doScroll) {
			try { top = !win.frameElement; } catch(e) { }
			if (top) poll();
		}
		doc[add](pre + 'DOMContentLoaded', init, false);
		doc[add](pre + 'readystatechange', init, false);
		win[add](pre + 'load', init, false);
	}
}
//@prepros-prepend !contentLoaded.js

var hasClass = function (element, className) {
	return new RegExp(' ' + className + ' ').test(' ' + element.className + ' ');
};
var removeClass = function (element, removeClass) {
	var regex = new RegExp('(?:^|\\s)' + removeClass + '(?!\\S)');
	element.className = element.className.replace(regex, '' );
};

contentLoaded(window, function() {
	// To stop stuff from animating on page load
	document.querySelector("body").className = "";

	// Done like this so I can have multiple files minified into 1 later
	subPageNavigation();
	committeePageNavigation();
});

// @prepros-append !committeePageNavigation.js
var committeePageNavigation = function () {
	var h2 = document.querySelectorAll('h2');
	var all = document.querySelector('#all');
	var cias = document.querySelector('#cias');
	var alot = document.querySelector('#alot');
	var la = document.querySelector('#la');
	var alot2 = document.querySelector('#alot2');
	var rtc = document.querySelector('#rtc');
	var people = document.querySelectorAll('.person');
	var ciasTeam = document.querySelectorAll('.cias');
	var alotTeam = document.querySelectorAll('.alot');
	var laTeam = document.querySelectorAll('.la');
	var alot2Team = document.querySelectorAll('.alot2');
	var rtcTeam = document.querySelectorAll('.rtc');
	var teamsDict = {
		all: [all, people],
		cias: [cias, ciasTeam],
		alot: [alot, alotTeam],
		la: [la, laTeam],
		alot2: [alot2, alot2Team],
		rtc: [rtc, rtcTeam]
	};

	var nodeDisplayForEach = function(nodeList, action) {
		return Array.prototype.forEach.call(nodeList, function(elem) {
			elem.style.display = action;
		});
	};

	var toggleShow = function(key) {
		if (key === teamsDict[all]) {
			nodeDisplayForEach(h2, "");
		} else {
			nodeDisplayForEach(h2, "none");
			nodeDisplayForEach(people, "none");
		}
		nodeDisplayForEach(teamsDict[key][1], "");
	};

	var toggleActive = function(el) {
		var key;
		for (var team in teamsDict) {
			if (teamsDict.hasOwnProperty(team)) {
				if (teamsDict[team][0] === el) {
					key = team;
				}
				teamsDict[team][0].className = "";
			}
		}
		el.className = "active";
		toggleShow(key);
	};

	for (var team in teamsDict) {
		if (teamsDict.hasOwnProperty(team)) { // safety check for using for...in 
			teamsDict[team][0].addEventListener('click', function() { toggleActive(this); }, false);
		}
	}
};
var subPageNavigation = function() {
	var subPageNav = Array.prototype.slice.call(document.querySelectorAll('nav.two > a'));
	var subPages = Array.prototype.slice.call(document.querySelectorAll('.subpage'));

	var toggleDisplayState = function() {
		for (var i = 0; i < subPageNav.length; i++) {
			if (hasClass(subPageNav[i], "active")) {
				removeClass(subPageNav[i], "active");
				subPages[i].style.display = "none";
			}
			else {
				subPageNav[i].className += " active";
				subPages[i].style.display = "block";
			}
		}

		// for (var i = 0; i < subPages.length; i++) {
		// 	if (subPages[i] === "" || "block") {
		// 		console.log('hello');
		// 		subPages[i].style.display = "none";
		// 	}
		// 	else {
		// 		console.log('hi');
		// 		subPages[i].style.display = "block";
		// 	}
		// }
	};

	for (var i = 0; i < subPageNav.length; i++) {
		subPageNav[i].addEventListener('click', function() { toggleDisplayState(this); }, false);
	}
};